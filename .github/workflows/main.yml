name: Deploy AWS CDK

# Controls when the action will run. 
on:
  #push:
  #branches: [ master ]
  #pull_request:
    #branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  aws_cdk:
    runs-on: ubuntu-latest
    steps:
      - name: Define Variables
        id: define_variables
        run: |
         if [[ "${{ github.ref_name }}" == "main" ]]; then
            echo "::set-output name=awsAccessKeyId::${{ secrets.AWS_ACCESS_KEY_ID }}"
            echo "::set-output name=awsSecretKey::${{ secrets.AWS_SECRET_ACCESS_KEY_ID }}"
          shell: bash

      - name: Checkout repo
        uses: actions/checkout@v3

      - uses: actions/setup-node@v2
        with:
          node-version: "14"
      - name: Configure aws credentials
        uses: aws-actions/configure-aws-credentials@master
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_ID }}
          aws-region: eu-central-1
          role-to-assume: arn:aws:iam::398755355329:user/guru
      - name: install npm
        run: 'sudo apt update -y && sudo apt install nodejs npm -y'

      - name: Install CDK dependencies
        working-directory: ./cdk
        run: npm i -g aws-cdk && npm i

      - name: Install lambdas
        working-directory: ./cdk

      - name: Install Requirements 
        run: 'npm install'
        working-directory: ./cdk-workshop

      - name: CDK Synth
        run: cdk synth
        working-directory: ./cdk-workshop
              
      - name: CDK bootstrap
        run: cdk bootstrap
        working-directory: ./cdk-workshop

      - name: CDK Deploy
        run: cdk deploy --require-approval never
        working-directory: ./cdk-workshop
        
      #- name: CDK Destroy
       # run: cdk destroy --force
       # working-directory: ./cdk-workshop
