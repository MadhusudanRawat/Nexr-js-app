name: Deploy AWS CDK

# Controls when the action will run. 
on:
  #push:
  #branches: [ master ]
  #pull_request:
    #branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  aws_cdk:
    runs-on: ubuntu-latest
    steps:
      - name: Define Variables
        id: define_variables
        run: |
         if [[ "${{ github.ref_name }}" == "main" ]]; then
            echo "::set-output name=awsAccessKeyId::${{ secrets.AWS_ACCESS_KEY_ID }}"
            echo "::set-output name=awsSecretKey::${{ secrets.AWS_SECRET_ACCESS_KEY_ID }}"
        shell: bash
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: AKIAVZV5L3LA2YFGR77R
          aws-secret-access-key: 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
          aws-region: eu-central-1
          role-to-assume: arn:aws:iam::398755355329:user/guru
      - name: install npm
        run: 'sudo apt update -y && sudo apt install nodejs npm -y'

      - name: Install AWS CDK
        run: 'sudo npm install -g aws-cdk' 

      - name: Install Requirements 
        run: 'npm install'
        working-directory: ./cdk-workshop

      - name: CDK Synth
        run: cdk synth
        working-directory: ./cdk-workshop
              
      - name: CDK bootstrap
        run: cdk bootstrap
        working-directory: ./cdk-workshop

      - name: CDK Deploy
        run: cdk deploy --require-approval never
        working-directory: ./cdk-workshop
        
      #- name: CDK Destroy
       # run: cdk destroy --force
       # working-directory: ./cdk-workshop
